---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "todo-app.name" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ include "todo-app.name" .}}
spec:
  replicas: {{ .Values.replicaCount }}
  progressDeadlineSeconds: {{ .Values.progressDeadlineSecondsCount }}
  minReadySeconds: {{ .Values.minReadySecondsCount }}
  strategy:
    type: {{ .Values.strategy.type }}
    rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
  selector:
    matchLabels:
      app: {{ include "todo-app.name" .}}
  template:
    metadata:
      labels:
        app: {{ include "todo-app.name" .}}
    spec:
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.appContainer.containerPort }}
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: {{ include "todo-app.name" .}}
                  key: NODE_ENV
                  optional: true
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "todo-app.name" . }}-config
                  key: DB_HOST
                  optional: true
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "todo-app.name" . }}-config
                  key: DB_NAME
                  optional: true
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "todo-app.name" . }}-secret
                  key: DB_PASSWORD
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "todo-app.name" . }}-secret
                  key: DB_USER
                  optional: true
          envFrom:
            - configMapRef:
                name: {{ include "todo-app.name" . }}-config
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.readinessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          livenessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.readinessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          resources:
            requests:
              memory: {{ .Values.requests.memory }}
              cpu: {{ .Values.requests.cpu }}
            limits:
              memory: {{ .Values.limits.memory }}
              cpu: {{ .Values.limits.cpu }}
      initContainers:
        - name: {{ .Values.initContainer.name }}
          image: {{ .Values.initContainer.image }}
          env:
            - name: FLYWAY_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "todo-app.name" . }}-config
                  key: FLYWAY_ENDPOINT
                  optional: true
            - name: FLYWAY_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "todo-app.name" . }}-secret
                  key: DB_USER
                  optional: true
            - name: FLYWAY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "todo-app.name" . }}-secret
                  key: DB_PASSWORD
                  optional: true
          args: [{{ .Values.initContainer.args | quote }}]